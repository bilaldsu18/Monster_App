import { Component, OnInit, Input } from '@angular/core';
import { HttpClient } from '@angular/common/http';

declare let $;

@Component({
    moduleId: module.id,
    selector: 'app-add-block-cycle',
    templateUrl: './add-block-cycle.component.html',
    styleUrls: ['./add-block-cycle.component.css']
})
export class AddBlockCycleComponent implements OnInit {
    stepOne = true;
    stepTwo = true;
    stepThree = true;
    stepFour = true;
    @Input('blockCycles') blockCycles: any;

    abc: 'asdhaskdhkjashsdkahskdhaskjd'

    constructor(private http: HttpClient) {

    }

    ngOnInit() {
        console.log(this.blockCycles)
        // Date Picker
        $('.mydatepicker, #datepicker').datepicker();
        $('#datepicker-autoclose').datepicker({
            autoclose: true,
            todayHighlight: true
        });
        // jQuery('.mydatepicker, #datepicker').datepicker();


        // $(".tab-wizard").steps({
        //   headerTag: "h6"
        //   , bodyTag: "section"
        //   , transitionEffect: "fade"
        //   , titleTemplate: '<span class="step">#index#</span> #title#'
        //   , labels: {
        //     finish: "Submit"
        //   }
        //   , onFinished: (event, currentIndex) => {
        //     //  swal("Form Submitted!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.");
        //   }
        // });


        // var form = $(".validation-wizard").show();

        // $(".validation-wizard").steps({
        //   headerTag: "h6"
        //   , bodyTag: "section"
        //   , transitionEffect: "fade"
        //   , titleTemplate: '<span class="step">#index#</span> #title#'
        //   , labels: {
        //     finish: "Submit"
        //   }
        //   , onStepChanging: (event, currentIndex, newIndex) => {
        //     return currentIndex > newIndex || !(3 === newIndex && Number($("#age-2").val()) < 18) && (currentIndex < newIndex && (form.find(".body:eq(" + newIndex + ") label.error").remove(), form.find(".body:eq(" + newIndex + ") .error").removeClass("error")), form.validate().settings.ignore = ":disabled,:hidden", form.valid())
        //   }
        //   , onFinishing: (event, currentIndex) => {
        //     return form.validate().settings.ignore = ":disabled", form.valid()
        //   }
        //   , onFinished: (event, currentIndex) => {
        //     //  swal("Form Submitted!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.");
        //   }
        // }), $(".validation-wizard").validate({
        //   ignore: "input[type=hidden]"
        //   , errorClass: "text-danger"
        //   , successClass: "text-success"
        //   , highlight: (element, errorClass) => {
        //     $(element).removeClass(errorClass)
        //   }
        //   , unhighlight: (element, errorClass) => {
        //     $(element).removeClass(errorClass)
        //   }
        //   , errorPlacement: (error, element) => {
        //     error.insertAfter(element)
        //   }
        //   , rules: {
        //     email: {
        //       email: !0
        //     }
        //   }
        // })


        $(".tab-wizard").steps({
            headerTag: "h6"
            , bodyTag: "section"
            , transitionEffect: "fade"
            , titleTemplate: '<span class="step">#index#</span> #title#'
            , labels: {
                finish: "Submit"
            }
            , onFinished: function (event, currentIndex) {
                this.swal("Form Submitted!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.");

            }
        });


        //   var form = $(".validation-wizard").show();

        //   $(".validation-wizard").steps({
        //       headerTag: "h6"
        //       , bodyTag: "section"
        //       , transitionEffect: "fade"
        //       , titleTemplate: '<span class="step">#index#</span> #title#'
        //       , labels: {
        //           finish: "Submit"
        //       }
        //       , onStepChanging: function (event, currentIndex, newIndex) {
        //           return currentIndex > newIndex || !(3 === newIndex && Number($("#age-2").val()) < 18) && (currentIndex < newIndex && (form.find(".body:eq(" + newIndex + ") label.error").remove(), form.find(".body:eq(" + newIndex + ") .error").removeClass("error")), form.validate().settings.ignore = ":disabled,:hidden", form.valid())
        //       }
        //       , onFinishing: function (event, currentIndex) {
        //           return form.validate().settings.ignore = ":disabled", form.valid()
        //       }
        //       , onFinished: function (event, currentIndex) {
        //            this.swal("Form Submitted!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.");
        //       }
        //   }), $(".validation-wizard").validate({
        //       ignore: "input[type=hidden]"
        //       , errorClass: "text-danger"
        //       , successClass: "text-success"
        //       , highlight: function (element, errorClass) {
        //           $(element).removeClass(errorClass)
        //       }
        //       , unhighlight: function (element, errorClass) {
        //           $(element).removeClass(errorClass)
        //       }
        //       , errorPlacement: function (error, element) {
        //           error.insertAfter(element)
        //       }
        //       , rules: {
        //           email: {
        //               email: !0
        //           }
        //       }
        //   })

    }

}








//------------------------------------------
<div class="row">
    <div class="col-12">

        <!-- <div class="example">
                            
                    <p class="text-muted m-b-20">just add class
                        <code>.complex-colorpicker</code> to create it.</p>
                    <div class="input-group">
                        <input type="text" class="form-control" id="datepicker-autoclose" placeholder="mm/dd/yyyy">
                        <span class="input-group-addon">
                            <i class="icon-calender"></i>
                        </span>
                    </div>
                </div> -->

        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Properties</h4>
                <h6 class="card-subtitle">Properties on the block cycle</h6>
                <div class="table-responsive">
                    <table id="demo-foo-addrow" class="table m-t-30 table-hover contact-list footable" data-page-size="5">
                        <thead>
                            <tr>
                                <th>Property</th>
                                <th>Pest</th>
                                <th>Comments</th>
                                <th>Next Inspection</th>
                                <th>Inspections</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr *ngFor="let i of propertyInfo">
                                <td>{{i.address}}</td>

                                <td></td>
                                <td>{{i.comments}}</td>
                                <td>
                                    <div class="example">

                                        <div class="input-group">
                                            <input type="text" class="form-control complex-colorpicker" id="datepicker-autoclose" #box placeholder="mm/dd/yyyy">
                                            <span class="input-group-addon">
                                                <i class="icon-calender"></i>
                                            </span>
                                        </div>
                                    </div>
                                </td>
                                <td>{{i.inspections}}</td>
                                <td>
                                    <span class="label label-info">{{i.statusId}}</span>
                                </td>


                            </tr>
                        </tbody>

                        <tfoot>
                            <tr>
                                <td colspan="2">
                                    <button type="button" class="btn btn-info btn-rounded" data-toggle="modal" data-target="#add-contact">Add New Contact</button>
                                </td>
                                <div id="add-contact" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <!-- <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                                                <h4 class="modal-title" id="myModalLabel">Add New Contact</h4>
                                            </div> -->
                                            <div class="modal-body">
                                                <div *ngIf="blockCycles">
                                                    <app-add-block-cycle [blockCycles]="blockCycles"></app-add-block-cycle>
                                                </div>
                                                <!-- <form class="form-horizontal form-material">
                                                    <div class="form-group">
                                                        <div class="col-md-12 m-b-20">
                                                            <input type="text" class="form-control" placeholder="Type name"> </div>
                                                        <div class="col-md-12 m-b-20">
                                                            <input type="text" class="form-control" placeholder="Email"> </div>
                                                        <div class="col-md-12 m-b-20">
                                                            <input type="text" class="form-control" placeholder="Phone"> </div>
                                                        <div class="col-md-12 m-b-20">
                                                            <input type="text" class="form-control" placeholder="Designation"> </div>
                                                        <div class="col-md-12 m-b-20">
                                                            <input type="text" class="form-control" placeholder="Age"> </div>
                                                        <div class="col-md-12 m-b-20">
                                                            <input type="text" class="form-control" placeholder="Date of joining"> </div>
                                                        <div class="col-md-12 m-b-20">
                                                            <input type="text" class="form-control" placeholder="Salary"> </div>
                                                        <div class="col-md-12 m-b-20">
                                                            <div class="fileupload btn btn-danger btn-rounded waves-effect waves-light">
                                                                <span>
                                                                    <i class="ion-upload m-r-5"></i>Upload Contact Image</span>
                                                                <input type="file" class="upload"> </div>
                                                        </div>
                                                    </div> -->

                                                <!-- </form> -->
                                            </div>

                                        </div>
                                        <!-- /.modal-content -->
                                    </div>
                                    <!-- /.modal-dialog -->
                                </div>
                                <td colspan="7">
                                    <div class="text-right">
                                        <ul class="pagination"> </ul>
                                    </div>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>